WITH FilteredLatest AS (
    SELECT t.*
    FROM YourTable t
    CROSS APPLY (
        SELECT MAX(DateColumn) AS MaxDate
        FROM YourTable
        WHERE YEAR(DateColumn) = YEAR(t.DateColumn)
          AND MONTH(DateColumn) = MONTH(t.DateColumn)
          AND YEAR(DateColumn) = 2017
    ) m
    WHERE t.DateColumn = m.MaxDate
      AND YEAR(t.DateColumn) = 2017
),

-- Adjust LOB for shared servers by joining Table2 on SerialNumber and applying HostingType logic
SharedServerAdjusted AS (
    SELECT
        fl.*,
        CASE 
            WHEN s.HostingType IN ('type1', 'type2') THEN 'retail'
            ELSE 'gov'
        END AS AdjustedLOB
    FROM FilteredLatest fl
    LEFT JOIN Table2 s ON fl.SerialNumber = s.SerialNumber
    WHERE fl.Type = 'physical server' AND fl.LOB = 'shared server'
),

-- Aggregate Quarterly sums for all non-shared servers (kept as is)
QuarterlySumsNonShared AS (
    SELECT 
        YEAR(DateColumn) AS Yr,
        DATEPART(QUARTER, DateColumn) AS Quarter,
        LOB,
        Type,
        SUM(Quantity) AS QtySum
    FROM FilteredLatest
    WHERE NOT (Type = 'physical server' AND LOB = 'shared server')
    GROUP BY YEAR(DateColumn), DATEPART(QUARTER, DateColumn), LOB, Type
),

-- Aggregate Quarterly sums for adjusted shared servers with reassigned LOBs
QuarterlySumsAdjustedShared AS (
    SELECT
        YEAR(DateColumn) AS Yr,
        DATEPART(QUARTER, DateColumn) AS Quarter,
        AdjustedLOB AS LOB,
        Type,
        SUM(Quantity) AS QtySum
    FROM SharedServerAdjusted
    GROUP BY YEAR(DateColumn), DATEPART(QUARTER, DateColumn), AdjustedLOB, Type
),

-- Combine adjusted shared servers with non-shared servers
QuarterlySumsCombined AS (
    SELECT * FROM QuarterlySumsNonShared
    UNION ALL
    SELECT * FROM QuarterlySumsAdjustedShared
),

-- Calculate SharedServerSum and TotalVirtualSum per year and quarter for original shared server counts 
-- (to be used for averaging and virtual add calculation)
SharedServerSum AS (
    SELECT
        YEAR(DateColumn) AS Yr,
        DATEPART(QUARTER, DateColumn) AS Quarter,
        SUM(CASE WHEN Type = 'physical server' AND LOB = 'shared server' THEN Quantity ELSE 0 END) AS SharedServerSum,
        SUM(CASE WHEN Type = 'virtual' THEN Quantity ELSE 0 END) AS TotalVirtualSum
    FROM FilteredLatest
    GROUP BY YEAR(DateColumn), DATEPART(QUARTER, DateColumn)
)

SELECT 
    q.Yr,
    q.Quarter,
    q.LOB,
    SUM(CASE WHEN q.Type = 'physical server' THEN q.QtySum ELSE 0 END) AS PhysicalQty,
    SUM(CASE WHEN q.Type = 'virtual' THEN q.QtySum ELSE 0 END) AS VirtualQty,
    -- Average shared server count for the quarter (sum / 3 months)
    s.SharedServerSum / 3.0 AS SharedServerAvg,
    -- VirtualAdd distributed proportional to virtual qty fraction
    CASE 
        WHEN s.TotalVirtualSum > 0 THEN
            (SUM(CASE WHEN q.Type = 'virtual' THEN q.QtySum ELSE 0 END) / CAST(s.TotalVirtualSum AS FLOAT)) * (s.SharedServerSum / 3.0)
        ELSE 0
    END AS VirtualAdd,
    -- Total = Physical + VirtualAdd
    SUM(CASE WHEN q.Type = 'physical server' THEN q.QtySum ELSE 0 END) +
    CASE 
        WHEN s.TotalVirtualSum > 0 THEN
            (SUM(CASE WHEN q.Type = 'virtual' THEN q.QtySum ELSE 0 END) / CAST(s.TotalVirtualSum AS FLOAT)) * (s.SharedServerSum / 3.0)
        ELSE 0
    END AS TotalQty
FROM QuarterlySumsCombined q
JOIN SharedServerSum s ON q.Yr = s.Yr AND q.Quarter = s.Quarter
WHERE q.LOB <> 'shared server'  -- avoid double counting shared server itself
GROUP BY q.Yr, q.Quarter, q.LOB, s.SharedServerSum, s.TotalVirtualSum
ORDER BY q.Yr, q.Quarter, q.LOB;
