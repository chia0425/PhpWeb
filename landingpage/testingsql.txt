WITH MaxDatesPerMonth AS (
    SELECT 
        YEAR(DateColumn) AS Yr,
        MONTH(DateColumn) AS Mth,
        MAX(DateColumn) AS MaxDate
    FROM YourTable
    WHERE DateColumn >= '2017-01-01' AND DateColumn < '2018-01-01'
    GROUP BY YEAR(DateColumn), MONTH(DateColumn)
),

FilteredLatest AS (
    SELECT t.*
    FROM YourTable t
    INNER JOIN MaxDatesPerMonth m
        ON t.DateColumn = m.MaxDate
),

-- Classify LOB and Quartz/non-Quartz for GMT
LOBClassified AS (
    SELECT
        CASE 
            WHEN LOB = 'GMT' AND Hostname LIKE '%QZ%' THEN 'GMT-QUARTZ'
            WHEN LOB = 'GMT' AND Hostname NOT LIKE '%QZ%' THEN 'GMT-NONQUARTZ'
            ELSE LOB
        END AS LOB,
        Type,
        Quantity,
        DateColumn,
        YEAR(DateColumn) AS Yr,
        MONTH(DateColumn) AS Mth
    FROM FilteredLatest
),

-- Aggregate quantities by LOB, year, month, and type
Aggregated AS (
    SELECT
        LOB,
        Yr,
        Mth,
        SUM(CASE WHEN Type = 'Virtual Server' THEN Quantity ELSE 0 END) AS VirtualQty,
        SUM(CASE WHEN Type = 'Physical Server' AND LOB = 'Shared-Server' THEN Quantity ELSE 0 END) AS SharedPhysicalQty,
        SUM(CASE WHEN Type = 'Physical Server' AND LOB <> 'Shared-Server' THEN Quantity ELSE 0 END) AS PhysicalQty
    FROM LOBClassified
    GROUP BY LOB, Yr, Mth
),

-- Calculate Adjusted Physical Qty per LOB, year, month applying shared-server * virtual logic
AdjustedQtyPerMonth AS (
    SELECT
        A.LOB,
        A.Yr,
        A.Mth,
        A.PhysicalQty + 
        CASE 
            WHEN SUM(A.VirtualQty) OVER (PARTITION BY A.Yr, A.Mth) = 0 THEN 0
            ELSE (A.VirtualQty * A.SharedPhysicalQty * 1.0) / SUM(A.VirtualQty) OVER (PARTITION BY A.Yr, A.Mth)
        END AS AdjustedQty
    FROM Aggregated A
),

-- Assign quarter per year, month
FinalQuarterly AS (
    SELECT
        LOB,
        Yr,
        DATEPART(QUARTER, DATEFROMPARTS(Yr, Mth, 1)) AS Quarter,
        AdjustedQty
    FROM AdjustedQtyPerMonth
    WHERE Yr = 2017
)

-- Final output: sum AdjustedQty per LOB, quarter and average per month (divide by 3)
SELECT
    LOB,
    CONCAT('Q', Quarter) AS Quarter,
    SUM(AdjustedQty) / 3.0 AS AvgMonthlyQty
FROM FinalQuarterly
GROUP BY LOB, Quarter
ORDER BY LOB, Quarter;
